
dir:unlink() -- Not needed
local appio=io

local function runlsp(_ENV,page)
   local fp,err=appio:open(page)
   if fp then
      local data
      data,err = fp:read"*a"
      fp:close()
      if data then
         -- Convert LSP to Lua
         data,err = ba.parselsp(data)
         if data then
            local func
            -- Compile Lua code
            func,err = load(data,".intro.lsp","t",_ENV)
            if func then
               local ok
               -- Let child use our: _ENV,io,page,app
               ok,err = pcall(func,_ENV,".intro.lsp",io,page,app)
               if err then print(err) end
            end
         end
      end
   end
   return true
end

local time=string.format("%d",os.time())
dir=ba.create.dir(nil,10)
dir:setfunc(function(_ENV,path)
   if request:domain() ~= "tutorial.realtimelogic.com" then
      response:sendredirect("https://tutorial.realtimelogic.com"..request:uri(), true)
   end
   if request:method() == "GET" and response:initial() then
      local h = request:header()
      if h["Sec-WebSocket-Key"] then
         if path == "checkserver" then
            local s = ba.socket.req2sock(request)
            if s then
               ba.timer(function() s:close() end):set(500,true)
            end
            return true
         end
         return false
      end
      local ext=path:match"[^%.^/]+$"
      if( not (not ext or ext=="lsp") ) then return false end
      if h["SimpleMQ"] or h["x-requested-with"] then return false end
      if path:find('/',2,true) then return false end
      local c = request:cookie"lsptutorial"
      local informed = c and c:value() == time
      if not informed then
         local c = response:createcookie"lsptutorial"
         c:path"/"
         c:value(time)
         c:activate()
      end
      if path=="" then return runlsp(_ENV,".intro.lsp") end
      if not informed then return runlsp(_ENV,".firsttime.lsp") end
   end
   return false
end)
dir:insert()

local hio = ba.openio"home"
assert(hio:stat".well-known" or hio:mkdir".well-known")

wkdir = ba.create.resrdr(".well-known",ba.mkio(hio,".well-known"))
ba.thread.run(function() wkdir:insert() end)
